name: "Build Docker Image"
description: |
  "Faz o build das imagens do Backend e Frontend"

inputs:
  registry_name:
    description: "Docker Registry"
    required: true
  project_name:
    description: "Project Name"
    required: true
  docker_login:
    description: "Docker username"
    required: true
  docker_password:
    description: "Docker password"
    required: true
  docker_back_front: 
    description: "Backend or Frontend"
    required: true
  git_branch:
    description: "Branch"
    required: true
  dockerfile_name:
    description: "Dockerfile Name"
    default: "Dockerfile"
  build:
    description: "Github build number"
  tag:
    description: "Tag da imagem. Default: latest"

runs:
  using: "composite"
  steps:
    - name: Extract tag last number
      shell: bash
      run: |
          echo "$GITHUB_REF_NAME"
          EXTRACT_LAST_NUMBER=$(echo "$GITHUB_REF_NAME" | sed 's/.*\.//')
          echo "EXTRACT_LAST_NUMBER=$EXTRACT_LAST_NUMBER" >> $GITHUB_ENV
          echo "Extract: $EXTRACT_LAST_NUMBER"
      if: ${{ inputs.docker_back_front }} == 'backend'

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.6.0

    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ inputs.docker_login }}
        password: ${{ inputs.docker_password }}
        logout: true

    - name: Set the tag
      shell: bash
      run: |
        if [[ "${{ inputs.docker_back_front }}" != '' ]]; then
          echo "condition_hifen=-" >> $GITHUB_ENV
        else
          echo "condition_hifen=" >> $GITHUB_ENV
        fi
        if [[ "${{ inputs.git_branch }}" =~ production-v.* ]]; then
          echo "final_tag=${condition_hifen}latest" >> $GITHUB_ENV
        elif [[ "${{ inputs.git_branch }}" =~ "staging" ]]; then
            echo "final_tag=${condition_hifen}staging" >> $GITHUB_ENV
        else
          echo "final_tag=-${{ inputs.tag }}" >> $GITHUB_ENV
        fi
        
    - name: Print variables
      shell: bash
      run: |
        echo "---------------------------------------------------------------------------------------"
        echo FINAL_TAG: $final_tag
        echo CONDITION_HIFEN: $condition_hifen
        echo "---------------------------------------------------------------------------------------"

    - name: Tree
      shell: bash
      run: ls -la

    - name: Extract production-v
      shell: bash
      run: |
        echo "${{ inputs.git_branch }}"
        EXTRACT_PRODUCTION_STRING=$(echo "${{inputs.git_branch }}" | sed 's/.*production-//')

        echo "EXTRACT_PRODUCTION_STRING=$EXTRACT_PRODUCTION_STRING" >> $GITHUB_ENV

    - name: Build and push Docker
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        file: ${{ inputs.dockerfile_name }}
        build-args: |
          BUILD=${{ inputs.build }}
          RELEASE=${{ env.EXTRACT_LAST_NUMBER }}
        labels: |
          --label source-branch=${{ github.ref_name }}
          --label build-commit=${{ github.sha }}
          --label repository=${{ github.repository }}
          --label source-build=github
        tags: |
          ${{ inputs.registry_name }}/${{ inputs.project_name }}:${{ inputs.docker_back_front }}${{ env.condition_hifen }}${{ env.final_tag }},
          ${{ inputs.registry_name }}/${{ inputs.project_name }}:${{ inputs.docker_back_front }}${{ env.condition_hifen }}${{ env.EXTRACT_PRODUCTION_STRING }}.${{ inputs.build }}
        push: true
